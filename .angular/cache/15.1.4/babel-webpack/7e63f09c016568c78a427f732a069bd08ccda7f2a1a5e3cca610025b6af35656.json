{"ast":null,"code":"import { catchError, tap, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.productUrl = './api/products/products.json';\n  }\n  getProducts() {\n    return this.http.get(this.productUrl).pipe(tap(data => console.log('All', JSON.stringify(data))), catchError(this.handleError));\n  }\n  handleError(err) {\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occured: ${err.error.message}`;\n    } else {\n      errorMessage = `Server returned code:${err.status}, error message is ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(() => errorMessage);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,EAAcC,GAAG,EAAEC,UAAU,QAAQ,MAAM;;;AAM9D,OAAM,MAAOC,cAAc;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,eAAU,GAAG,8BAA8B;EACZ;EACvCC,WAAW;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,UAAU,CAAC,CAACC,IAAI,CAClDR,GAAG,CAAES,IAAI,IAAKC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAAC,EACvDV,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC,CAC/B;EACL;EACQA,WAAW,CAAEC,GAAsB;IACvC,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,GAAG,CAACE,KAAK,YAAYC,UAAU,EAAE;MACjCF,YAAY,GAAG,qBAAqBD,GAAG,CAACE,KAAK,CAACE,OAAO,EAAE;KAE1D,MAAI;MACDH,YAAY,GAAG,wBAAwBD,GAAG,CAACK,MAAM,sBAAsBL,GAAG,CAACI,OAAO,EAAE;;IAExFT,OAAO,CAACO,KAAK,CAACD,YAAY,CAAC;IAC3B,OAAOf,UAAU,CAAC,MAAIe,YAAY,CAAC;EACvC;;AAnBSd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAmB,SAAdnB,cAAc;EAAAoB,YAFX;AAAM","names":["catchError","tap","throwError","ProductService","constructor","http","getProducts","get","productUrl","pipe","data","console","log","JSON","stringify","handleError","err","errorMessage","error","ErrorEvent","message","status","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\235696\\Downloads\\Angular-GettingStarted-master\\Angular-GettingStarted-master\\apm-new\\src\\app\\products\\product.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { catchError, Observable, tap, throwError } from \"rxjs\";\r\nimport { IProduct } from \"./product\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductService{\r\n    private productUrl = './api/products/products.json';\r\n    constructor(private http: HttpClient) {}\r\n    getProducts():Observable<IProduct[]>{\r\n        return this.http.get<IProduct[]>(this.productUrl).pipe(\r\n            tap((data) => console.log('All', JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    private handleError (err: HttpErrorResponse) {\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n            errorMessage = `An error occured: ${err.error.message}`;\r\n        \r\n        }else{\r\n            errorMessage = `Server returned code:${err.status}, error message is ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(()=>errorMessage);\r\n    }\r\n\r\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}